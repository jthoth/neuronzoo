{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/assets/vertex.glsl","webpack:///./src/assets/input_fragment.glsl","webpack:///./src/App.vue?d1f2","webpack:///./src/components/Neurons.vue?2479","webpack:///src/components/Neurons.vue","webpack:///./src/components/Neurons.vue?f688","webpack:///./src/components/Neurons.vue","webpack:///src/App.vue","webpack:///./src/App.vue?d7d8","webpack:///./src/App.vue","webpack:///./src/plugins/vuetify.js","webpack:///./src/main.js","webpack:///./src/assets/out_fragment.glsl","webpack:///./src/assets/cell_body_fragment.glsl"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","render","_vm","this","_h","$createElement","_c","_self","attrs","staticClass","_v","staticRenderFns","generations","model","callback","$$v","generation","expression","neurons","neuron","_s","size_input","size_body","size_output","src","vertexShader","cellBodyfragmentShader","_l","inputfragmentShader","output","outputfragmentShader","Effect","ShadersStore","methods","loadDataset","computed","component","VCard","VCol","VContainer","VIcon","VRow","VSelect","VSlider","components","Neurons","VApp","VAppBar","VContent","VToolbarTitle","VToolbar","use","icons","iconfont","config","productionTip","vuetify","h","App","$mount"],"mappings":"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","file":"js/app.a06e2987.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/neuronzoo/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = \"attribute vec3 position;\\r\\n\\r\\nuniform mat4 worldViewProjection;\\r\\nuniform float time;\\r\\n\\r\\n\\r\\n\\r\\nvarying float controlled_time;\\r\\n\\r\\nvoid main() {\\r\\n  gl_Position = worldViewProjection * vec4(position, 1.0);\\r\\n  controlled_time = ((time / 1000.0) + 1.0);\\r\\n}\\r\\n\"","module.exports = \"\\r\\nvarying float controlled_time;\\r\\nuniform float num_octaves;\\r\\n\\r\\n#define PI 3.141592653589793\\r\\n\\r\\nfloat random (in vec2 _st) {\\r\\n    return fract(sin(dot(_st.xy,\\r\\n                         vec2(12.9898,78.233)))*\\r\\n        43758.5453123);\\r\\n}\\r\\n\\r\\nhighp float noise(in vec2 uv) {\\r\\n    vec2 i = floor(uv);\\r\\n    vec2 f = fract(uv);\\r\\n    float a = random(i);\\r\\n    float b = random(i + vec2(1.0, 0.0));\\r\\n    float c = random(i + vec2(0.0, 1.0));\\r\\n    float d = random(i + vec2(1.0, 1.0));\\r\\n    vec2 u = f * f * (3.0 - 2.0 * f);\\r\\n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\\r\\n}\\r\\n\\r\\nfloat fbm ( in vec2 uv) {\\r\\n    float v = 0.0;\\r\\n    float a = 0.5;\\r\\n    vec2 shift = vec2(100.0);\\r\\n    mat2 rot = mat2(cos(0.5), sin(0.5),-sin(0.5), cos(0.50));\\r\\n    for (int i = 0; i < int(num_octaves); ++i) {\\r\\n        v += a * noise(uv);\\r\\n        uv = rot * uv * 2.0 + shift;\\r\\n        a *= 0.5;\\r\\n    }\\r\\n    return v;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n  vec2 st = gl_FragCoord.xy/120.0;\\r\\n\\r\\n  vec3 color = vec3(0.0);\\r\\n  vec2 q = vec2(0.);\\r\\n\\r\\n  q.x = fbm( st + 0.00 * controlled_time);\\r\\n  q.y = fbm( st + vec2(1.0));\\r\\n\\r\\n  vec2 r = vec2(0.);\\r\\n  r.x = fbm( st + 1.0 * q + vec2(1.7,9.2)+ 0.15 * controlled_time );\\r\\n  r.y = fbm( st + 1.0 * q + vec2(8.3,2.8)+ 0.126 * controlled_time);\\r\\n\\r\\n  float f = fbm(st + r);\\r\\n\\r\\n  color = mix(vec3(0.101961,0.619608,0.666667),\\r\\n              vec3(0.666667,0.666667,0.498039),\\r\\n              clamp((pow(f, 2.0)) * 4.0, 0.0, 1.0));\\r\\n\\r\\n  color = mix(color, vec3(0,0,0.164706), clamp(length(q),0.0,1.0));\\r\\n\\r\\n  color = mix(color, vec3(0.666667,1,1), clamp(length(r.x),0.0,1.0));\\r\\n\\r\\n  gl_FragColor = vec4((pow(f, 3.0) + .6 * pow(f, 2.0) + .5 * f) * color,1.);\\r\\n\\r\\n}\\r\\n\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('v-app-bar',{attrs:{\"app\":\"\"}},[_c('v-toolbar-title',{staticClass:\"headline text-uppercase\"},[_c('span',[_vm._v(\"CC7515\")]),_c('span',{staticClass:\"font-weight-light\"},[_vm._v(\" GPU COMPUTING\")])])],1),_c('v-content',[_c('Neurons')],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',{attrs:{\"fluid\":\"\",\"grid-list-xl\":\"\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"2\",\"md\":\"3\"}},[_c('v-card',{staticClass:\"pa-2\",attrs:{\"raised\":\"\",\"tile\":\"\"}},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"overline mb-4\"},[_c('v-icon',[_vm._v(\"mdi-apache-kafka\")]),_vm._v(\"Fractal Brownian Motion Over Neuron Operation\")],1),_c('v-select',{staticClass:\"mt-7\",attrs:{\"label\":\"Generation\",\"item-text\":\"name\",\"item-value\":\"value\",\"items\":_vm.generations,\"outlined\":\"\"},model:{value:(_vm.generation),callback:function ($$v) {_vm.generation=$$v},expression:\"generation\"}}),_c('v-select',{attrs:{\"label\":\"Neuron\",\"item-text\":\"name\",\"item-value\":\"value\",\"items\":_vm.neurons,\"outlined\":\"\"},model:{value:(_vm.neuron),callback:function ($$v) {_vm.neuron=$$v},expression:\"neuron\"}}),_c('label',{staticClass:\"overline\"},[_vm._v(\"Size Input \"+_vm._s(_vm.size_input))]),_c('v-slider',{attrs:{\"max\":5,\"min\":0,\"step\":0.25},model:{value:(_vm.size_input),callback:function ($$v) {_vm.size_input=$$v},expression:\"size_input\"}}),_c('label',{staticClass:\"overline\"},[_vm._v(\"Size Cell Body \"+_vm._s(_vm.size_body))]),_c('v-slider',{attrs:{\"max\":5,\"min\":0,\"step\":0.25},model:{value:(_vm.size_body),callback:function ($$v) {_vm.size_body=$$v},expression:\"size_body\"}}),_c('label',{staticClass:\"overline\"},[_vm._v(\"Size Output \"+_vm._s(_vm.size_output))]),_c('v-slider',{attrs:{\"max\":5,\"min\":0,\"step\":0.25},model:{value:(_vm.size_output),callback:function ($$v) {_vm.size_output=$$v},expression:\"size_output\"}})],1),_c('label',{staticClass:\"overline\"},[_c('v-icon',[_vm._v(\"mdi-settings\")]),_vm._v(\" Scroll to zoop up or down and Mouse Control \")],1)],1)],1),_c('v-col',{attrs:{\"cols\":\"8\",\"md\":\"9\"}},[_c('v-card',{staticClass:\"pa-2\",attrs:{\"raised\":\"\",\"tile\":\"\"}},[_c('Scene',[_c('Property',{attrs:{\"name\":\"clearColor\",\"color\":\"#FFF\"}}),_c('HemisphericLight'),_c('Asset',{attrs:{\"src\":_vm.generation.src,\"position\":[0, 0, 0],\"rotation\":[0, 1.5, -2.1]}}),_c('Sphere',{attrs:{\"scaling\":[_vm.size_body, _vm.size_body, _vm.size_body]}},[_c('Shader',{attrs:{\"name\":\"inline\",\"vertexShader\":_vm.vertexShader,\"fragmentShader\":_vm.cellBodyfragmentShader}},[_c('Uniform',{attrs:{\"variable\":\"num_octaves\",\"float\":_vm.generation.neurons.length}})],1)],1),_vm._l((_vm.generation.neurons),function(neuron){return _c('Box',{attrs:{\"position\":neuron,\"scaling\":[_vm.size_input, _vm.size_input, _vm.size_input],\"rotation\":[0, 1.5, -2.1]}},[_c('Shader',{attrs:{\"name\":\"inline\",\"vertexShader\":_vm.vertexShader,\"fragmentShader\":_vm.inputfragmentShader}},[_c('Uniform',{attrs:{\"variable\":\"num_octaves\",\"float\":_vm.generation.neurons.length}})],1)],1)}),_c('Box',{attrs:{\"position\":_vm.generation.output,\"scaling\":[_vm.size_output, _vm.size_output, _vm.size_output],\"rotation\":[0, 1.5, -2.1]}},[_c('Shader',{attrs:{\"name\":\"inline\",\"vertexShader\":_vm.vertexShader,\"fragmentShader\":_vm.outputfragmentShader}},[_c('Uniform',{attrs:{\"variable\":\"num_octaves\",\"float\":_vm.generation.neurons.length}}),_c('Uniform',{attrs:{\"variable\":\"neuron\",\"float\":_vm.neuron}})],1)],1)],2)],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n<template >\n    <v-container fluid grid-list-xl>\n          <v-row>\n              <v-col cols=\"2\" md=\"3\">\n                <v-card  class=\"pa-2\" raised tile>\n                  <v-col  cols=\"12\">\n                    <div class=\"overline mb-4\"> <v-icon>mdi-apache-kafka</v-icon>Fractal Brownian Motion Over Neuron Operation</div>\n                    <v-select v-model=\"generation\" class=\"mt-7\" label=\"Generation\"\n                      item-text=\"name\" item-value=\"value\"\n                      :items=\"generations\" outlined >\n                    </v-select>\n                  <v-select v-model=\"neuron\" label=\"Neuron\"\n                    item-text=\"name\" item-value=\"value\"\n                    :items=\"neurons\" outlined>\n                  </v-select>\n\n                  <label class=\"overline\">Size Input {{size_input}}</label>\n                  <v-slider v-model=\"size_input\" :max=\"5\" :min=\"0\" :step=\"0.25\"></v-slider>\n                  <label class=\"overline\">Size Cell Body {{size_body}}</label>\n                  <v-slider v-model=\"size_body\" :max=\"5\" :min=\"0\" :step=\"0.25\"></v-slider>\n                  <label class=\"overline\">Size Output {{size_output}}</label>\n                  <v-slider v-model=\"size_output\" :max=\"5\" :min=\"0\" :step=\"0.25\"></v-slider>\n                </v-col>\n                <label class=\"overline\"> <v-icon>mdi-settings</v-icon> Scroll to zoop up or down and Mouse Control </label>\n\n              </v-card>\n            </v-col>\n            <v-col cols=\"8\" md=\"9\">\n              <v-card class=\"pa-2\" raised tile>\n                <Scene>\n                  <Property name=\"clearColor\" color=\"#FFF\"></Property>\n                  <HemisphericLight></HemisphericLight>\n                  <Asset :src=\"generation.src\" :position=\"[0, 0, 0]\" :rotation=\"[0, 1.5, -2.1]\"> </Asset>\n                  <Sphere :scaling=\"[size_body, size_body, size_body]\">\n                      <Shader name=\"inline\" :vertexShader=\"vertexShader\" :fragmentShader=\"cellBodyfragmentShader\">\n                        <Uniform variable=\"num_octaves\" :float=\"generation.neurons.length\"></Uniform>\n                      </Shader>\n                  </Sphere>\n                  <Box v-for=\"neuron in generation.neurons\" :position=\"neuron\"\n                  :scaling=\"[size_input, size_input, size_input]\"\n                  :rotation=\"[0, 1.5, -2.1]\">\n                    <Shader name=\"inline\" :vertexShader=\"vertexShader\" :fragmentShader=\"inputfragmentShader\">\n                        <Uniform variable=\"num_octaves\" :float=\"generation.neurons.length\"></Uniform>\n                    </Shader>\n                  </Box>\n                  <Box  :position=\"generation.output\"\n                  :scaling=\"[size_output, size_output, size_output]\"\n                  :rotation=\"[0, 1.5, -2.1]\">\n                      <Shader name=\"inline\" :vertexShader=\"vertexShader\" :fragmentShader=\"outputfragmentShader\">\n                        <Uniform variable=\"num_octaves\" :float=\"generation.neurons.length\"></Uniform>\n                        <Uniform variable=\"neuron\" :float=\"neuron\"></Uniform>\n                      </Shader>\n                  </Box >\n                </Scene>\n              </v-card>\n            </v-col>\n        </v-row>\n\n</v-container>\n\n</template>\n\n<script>\nimport { BABYLON } from 'vue-babylonjs';\n\nimport VERTEX from '../assets/vertex.glsl';\nimport input_fragment from '../assets/input_fragment.glsl';\nimport cell_body_fragment from '../assets/cell_body_fragment.glsl';\nimport output_fragment from '../assets/out_fragment.glsl';\n\n\nBABYLON.Effect.ShadersStore['VertexShader'] = VERTEX;\n\nBABYLON.Effect.ShadersStore['inputFragmentShader'] = input_fragment;\nBABYLON.Effect.ShadersStore['cellFragmentShader'] = cell_body_fragment;\nBABYLON.Effect.ShadersStore['outputFragmentShader'] = output_fragment;\n\n\nexport default{\n  name:'Waves',\n  data() {\n    let generations = [\n      {name:'Firsth', value:{src:`${process.env.BASE_URL}v1.obj`, neurons:[[-4.6, -.3, 0],\n      [-4.5, .4, -.55]], output:[4, .05, .38]}},\n      {name:'Second', value:{src:`${process.env.BASE_URL}v2.obj`, neurons:[[-4.9, -.3, -.1],\n      [-5, -.7, .1], [-4.8, 0.15, -.4], [-4.75, .48, -.55]],\n      output:[4.0, 1.1, -.3]}},\n      {name:'Third', value:{src:`${process.env.BASE_URL}v3.obj`,  neurons:[\n      [-3.8, .2, -.35], [-3.89, 1.0, 1.2],\n      [-3.6, 2.7, -.15], [-4.4, -2.0, -.45], [-3.4, -1.0, 2.5],\n      [-4, -.6, -1.4], [-3.93, 1.0, -2.5]], output:[4.4, .45, .48]}},\n    ];\n\n    return {\n      size_input:0.35,\n      size_body:1.0,\n      size_output:0.50,\n      generations : generations,\n      neurons : [\n        {name:'Step', value:1},\n        {name:'Sigmoid', value:2},\n        {name:'Thangent', value:3},\n        {name:'Leaky Integrate and Fire', value:4},\n      ],\n      generation: generations[1].value,\n      neuron: 2,\n    }\n  },\n  methods:{\n    loadDataset: function() {\n\n    },\n  },\n  computed: {\n    vertexShader() {\n      return VERTEX;\n    },\n    inputfragmentShader() {\n      return input_fragment;\n    },\n    cellBodyfragmentShader() {\n      return cell_body_fragment;\n    },\n    outputfragmentShader() {\n      return output_fragment;\n    },\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Neurons.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/vuetify-loader/lib/loader.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Neurons.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Neurons.vue?vue&type=template&id=e1ba4762&\"\nimport script from \"./Neurons.vue?vue&type=script&lang=js&\"\nexport * from \"./Neurons.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\nimport { VSlider } from 'vuetify/lib/components/VSlider';\ninstallComponents(component, {VCard,VCol,VContainer,VIcon,VRow,VSelect,VSlider})\n","<template>\n  <v-app>\n    <v-app-bar app>\n      <v-toolbar-title class=\"headline text-uppercase\">\n        <span>CC7515</span>\n        <span class=\"font-weight-light\"> GPU COMPUTING</span>\n      </v-toolbar-title>\n    </v-app-bar>\n\n    <v-content>\n      <Neurons/>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\nimport Neurons from './components/Neurons';\n\nexport default {\n  name: 'App',\n  components: {\n    Neurons,\n  },\n  data: () => ({\n    //\n  }),\n};\n</script>\n","import mod from \"-!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/vuetify-loader/lib/loader.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=8fd87024&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VApp } from 'vuetify/lib/components/VApp';\nimport { VAppBar } from 'vuetify/lib/components/VAppBar';\nimport { VContent } from 'vuetify/lib/components/VContent';\nimport { VToolbarTitle } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VApp,VAppBar,VContent,VToolbarTitle})\n","import Vue from 'vue';\nimport Vuetify from 'vuetify/lib';\nimport vb from 'vue-babylonjs';\n\nVue.use(Vuetify);\nVue.use(vb);\n\nexport default new Vuetify({\n  icons: {\n    iconfont: 'mdi',\n  },\n});\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport vuetify from './plugins/vuetify';\r\n\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  vuetify,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","module.exports = \"\\r\\nvarying float controlled_time;\\r\\nuniform float num_octaves;\\r\\nuniform float neuron;\\r\\n\\r\\n#define PI 3.141592653589793\\r\\n#define TAU_MP 20.0\\r\\n\\r\\nfloat random (in vec2 _st) {\\r\\n    return fract(sin(dot(_st.xy,\\r\\n                         vec2(12.9898,78.233)))*\\r\\n        43758.5453123);\\r\\n}\\r\\n\\r\\nhighp float noise(in vec2 uv) {\\r\\n    vec2 i = floor(uv);\\r\\n    vec2 f = fract(uv);\\r\\n    float a = random(i);\\r\\n    float b = random(i + vec2(1.0, 0.0));\\r\\n    float c = random(i + vec2(0.0, 1.0));\\r\\n    float d = random(i + vec2(1.0, 1.0));\\r\\n    vec2 u = f * f * (3.0 - 2.0 * f);\\r\\n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\\r\\n}\\r\\n\\r\\nfloat fbm ( in vec2 uv) {\\r\\n    float v = 0.0;\\r\\n    float a = 0.5;\\r\\n    vec2 shift = vec2(100.0);\\r\\n    mat2 rot = mat2(cos(0.5), sin(0.5),-sin(0.5), cos(0.50));\\r\\n    for (int i = 0; i < int(num_octaves); ++i) {\\r\\n        v += a * noise(uv);\\r\\n        uv = rot * uv * 2.0 + shift;\\r\\n        a *= 0.5;\\r\\n    }\\r\\n    return v;\\r\\n}\\r\\n\\r\\nvec3 compute_lif(in vec3 compound){\\r\\n  float x = exp(compound[0]/TAU_MP)*compound[0];\\r\\n  float y = exp((compound[1] - compound[0])/TAU_MP)*compound[1];\\r\\n  float z  =exp((compound[2] - compound[1])/TAU_MP)*compound[2];\\r\\n\\r\\n  return vec3(x + y + z);\\r\\n}\\r\\n\\r\\nvec4 compute_activation_function(in vec3 compound){\\r\\n\\r\\n  mat4 container = mat4(1.);\\r\\n\\r\\n  container[0] = vec4(step(.5, compound), 1.);\\r\\n  container[1] = vec4(1.0 / (1. + exp(-compound)), 1.);\\r\\n  container[2] = vec4(tan(compound), 1.);\\r\\n  container[3] = vec4(compute_lif(compound), 1.);\\r\\n\\r\\n  return container[int(neuron) - 1];\\r\\n}\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n  vec2 st = gl_FragCoord.xy/120.0;\\r\\n\\r\\n  vec3 color = vec3(0.0);\\r\\n  vec2 q = vec2(0.);\\r\\n\\r\\n  q.x = fbm( st + 0.00 * controlled_time);\\r\\n  q.y = fbm( st + vec2(1.0));\\r\\n\\r\\n  vec2 r = vec2(0.);\\r\\n  r.x = fbm( st + 1.0 * q + vec2(1.7,9.2)+ 0.15 * controlled_time );\\r\\n  r.y = fbm( st + 1.0 * q + vec2(8.3,2.8)+ 0.126 * controlled_time);\\r\\n\\r\\n  float f = fbm(st + r);\\r\\n\\r\\n  color = mix(vec3(0.101961,0.619608,0.666667),\\r\\n              vec3(0.666667,0.666667,0.498039),\\r\\n              clamp((pow(f, 2.0)) * 4.0, 0.0, 1.0));\\r\\n\\r\\n  color = mix(color, vec3(0,0,0.164706), clamp(length(q),0.0,1.0));\\r\\n\\r\\n  color = mix(color, vec3(0.666667,1,1), clamp(length(r.x),0.0,1.0));\\r\\n\\r\\n  for (int i = 0; i < int(num_octaves); ++i) {\\r\\n    color += color * (pow(f, 3.0) + .6 * pow(f, 2.0) + .5 * f); // Compound axoms sumations supose I have\\r\\n    // a neuron for each pixel in the screen\\r\\n  }\\r\\n\\r\\n  gl_FragColor = compute_activation_function(color / num_octaves);\\r\\n\\r\\n}\\r\\n\"","module.exports = \"\\r\\nvarying float controlled_time;\\r\\nuniform float num_octaves;\\r\\n\\r\\n#define PI 3.141592653589793\\r\\n\\r\\nfloat random (in vec2 _st) {\\r\\n    return fract(sin(dot(_st.xy,\\r\\n                         vec2(12.9898,78.233)))*\\r\\n        43758.5453123);\\r\\n}\\r\\n\\r\\nhighp float noise(in vec2 uv) {\\r\\n    vec2 i = floor(uv);\\r\\n    vec2 f = fract(uv);\\r\\n    float a = random(i);\\r\\n    float b = random(i + vec2(1.0, 0.0));\\r\\n    float c = random(i + vec2(0.0, 1.0));\\r\\n    float d = random(i + vec2(1.0, 1.0));\\r\\n    vec2 u = f * f * (3.0 - 2.0 * f);\\r\\n    return mix(a, b, u.x) + (c - a)* u.y * (1.0 - u.x) + (d - b) * u.x * u.y;\\r\\n}\\r\\n\\r\\nfloat fbm ( in vec2 uv) {\\r\\n    float v = 0.0;\\r\\n    float a = 0.5;\\r\\n    vec2 shift = vec2(100.0);\\r\\n    mat2 rot = mat2(cos(0.5), sin(0.5),-sin(0.5), cos(0.50));\\r\\n    for (int i = 0; i < int(num_octaves); ++i) {\\r\\n        v += a * noise(uv);\\r\\n        uv = rot * uv * 2.0 + shift;\\r\\n        a *= 0.5;\\r\\n    }\\r\\n    return v;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\nvoid main() {\\r\\n\\r\\n  vec2 st = gl_FragCoord.xy/120.0;\\r\\n  vec3 color = vec3(0.0);\\r\\n  vec2 q = vec2(0.);\\r\\n\\r\\n  q.x = fbm( st + 0.01 * controlled_time);\\r\\n  q.y = fbm( st + vec2(1.0));\\r\\n\\r\\n  vec2 r = vec2(0.);\\r\\n  r.x = fbm( st + 1.0 * q + vec2(1.7, 9.2) + 0.15 * controlled_time );\\r\\n  r.y = fbm( st + 1.0 * q + vec2(8.3, 2.8) + 0.126 * controlled_time);\\r\\n\\r\\n  float f = fbm(st + r);\\r\\n\\r\\n  color = mix(vec3(0.101961, 0.619608, 0.666667),\\r\\n              vec3(0.666667, 0.666667, 0.498039),\\r\\n              clamp((pow(f, 2.0)) * 4.0, 0.0, 1.0));\\r\\n\\r\\n  color = mix(color, vec3(0, 0, 0.164706), clamp(length(q), 0.0,1.0));\\r\\n  color = mix(color, vec3(0.666667,1,1), clamp(length(r.x), 0.0,1.0));\\r\\n\\r\\n  for (int i = 0; i < int(num_octaves); ++i) {\\r\\n    color += color * (pow(f, 3.0) + .6 * pow(f, 2.0) + .5 * f); // Compound axoms sumations supose I have\\r\\n    // a neuron for each pixel in the screen\\r\\n  }\\r\\n\\r\\n  gl_FragColor = vec4(color / num_octaves, 1.);\\r\\n\\r\\n}\\r\\n\""],"sourceRoot":""}